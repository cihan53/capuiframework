{"version":3,"sources":["../../src/Lib/LoadingSpinner.js"],"names":["React","Card","CardBody","ProgressBar","Spinner","require","LoadingSpinner","loadPercent","loadAutoIncrement","loadIntervalTime","props","error","console","debug","toString","spinner","name","color","Component"],"mappings":";;;;;;;;;;;;;;;;AAAA;;;;;AAMA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,IAAT,EAAeC,QAAf,QAA+B,YAA/B;AACA,OAAOC,WAAP,MAAwB,yBAAxB;;AACA,IAAIC,OAAO,GAAGC,OAAO,CAAC,eAAD,CAArB;;IAGqBC,c;;;;;;;;;;;UAEnBC,W,GAAc,G;UACdC,iB,GAAoB,I;UACpBC,gB,GAAmB,G;;;;;;yCAEE,CACnB;AACD;;;2CAEsB,CACrB;AACD;;;6BAGQ;AAGP,UAAI,KAAKC,KAAL,CAAWC,KAAf,EAAsB;AACpBC,QAAAA,OAAO,CAACC,KAAR,CAAc,gBAAd,EAAgC,KAAKH,KAAL,CAAWC,KAA3C;AACA,eAAQ,oBAAC,KAAD,CAAO,QAAP,QAAgB,oBAAC,IAAD;AAAM,UAAA,SAAS,EAAC;AAAhB,WACtB,oBAAC,QAAD,QACE;AAAY,UAAA,SAAS,EAAC;AAAtB,WACE,+BAAI,KAAKD,KAAL,CAAWC,KAAX,CAAiBG,QAAjB,EAAJ,CADF,CADF,CADsB,CAAhB,CAAR;AAOD,OATD,MASO;AACL,YAAI,KAAKJ,KAAL,CAAWK,OAAf,EACE,OAAQ,oBAAC,OAAD;AAAS,UAAA,IAAI,EAAE,KAAKL,KAAL,CAAWM,IAA1B;AAAgC,UAAA,KAAK,EAAE,KAAKN,KAAL,CAAWO,KAAlD;AAAyD,UAAA,SAAS,EAAE;AAApE,UAAR;AAGF,eAAQ,oBAAC,WAAD;AAAa,UAAA,OAAO,EAAE,KAAtB;AAA6B,UAAA,OAAO,EAAE,KAAKV,WAA3C;AAAwD,UAAA,aAAa,EAAE,KAAKC,iBAA5E;AAAgG,UAAA,YAAY,EAAE,KAAKC;AAAnH,UAAR;AAGD;AACF;;;;EApCyCT,KAAK,CAACkB,S;;SAA7BZ,c","sourcesContent":["/*\r\n * Copyright (c) 2019. Crypttech Yazılım\r\n * Author: Cihan Öztürk\r\n * Email: cihanozturk@crypttech.com\r\n */\r\n\r\nimport React from \"react\";\r\n\r\nimport { Card, CardBody } from \"reactstrap\";\r\nimport ProgressBar from \"react-progress-bar-plus\";\r\nvar Spinner = require('react-spinkit');\r\n\r\n\r\nexport default class LoadingSpinner extends React.Component {\r\n\r\n  loadPercent = 100;\r\n  loadAutoIncrement = true;\r\n  loadIntervalTime = 300;\r\n\r\n  componentWillMount() {\r\n    // CAP.Stores.get(\"CommonStore\").setLoadAutoIncrement(true)\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    //CAP.Stores.get(\"CommonStore\").setLoadPercent(100)\r\n  }\r\n\r\n\r\n  render() {\r\n\r\n\r\n    if (this.props.error) {\r\n      console.debug(\"Loading Error:\", this.props.error);\r\n      return (<React.Fragment><Card className=\"text-white bg-danger text-center\">\r\n        <CardBody>\r\n          <blockquote className=\"card-bodyquote\">\r\n            <p>{this.props.error.toString()}</p>\r\n          </blockquote>\r\n        </CardBody>\r\n      </Card></React.Fragment>);\r\n    } else {\r\n      if (this.props.spinner)\r\n        return (<Spinner name={this.props.name} color={this.props.color} className={\" margin-center \"} />);\r\n\r\n\r\n      return (<ProgressBar spinner={false} percent={this.loadPercent} autoIncrement={this.loadAutoIncrement}  intervalTime={this.loadIntervalTime}/>);\r\n\r\n\r\n    }\r\n  }\r\n}"],"file":"LoadingSpinner.js"}