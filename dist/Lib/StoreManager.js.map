{"version":3,"sources":["../../src/Lib/StoreManager.js"],"names":["observable","computed","action","StoreManager","__stores","Map","add","alias","store","set","get","stores","Array","from","values","keys","entries","size","toObject","forEach","value","key","map","toJS"],"mappings":";;;;AAAA;;;;;AAMA,SAASA,UAAT,EAAqBC,QAArB,EAA+BC,MAA/B,QAA6C,MAA7C;AAEA,MAAMC,YAAY,WAAG;AAEPC,EAAAA,QAAQ,EAAE,IAAIC,GAAJ,EAFH;;AAIXC,EAAAA,GAAG,CAACC,KAAD,EAAQC,KAAR,EAAe;AAExB,SAAKJ,QAAL,CAAcK,GAAd,CAAkBF,KAAlB,EAAyBC,KAAzB;AACD,GAPkB;;AASXE,EAAAA,GAAG,CAACH,KAAD,EAAQ;AACjB,WAAO,KAAKH,QAAL,CAAcM,GAAd,CAAkBH,KAAlB,CAAP;AACD,GAXkB;;AAaT,MAAII,MAAJ,GAAa;AACrB,WAAOC,KAAK,CAACC,IAAN,CAAW,KAAKT,QAAL,CAAcU,MAAd,EAAX,CAAP;AACD,GAfkB;;AAiBT,MAAIC,IAAJ,GAAW;AACnB,WAAOH,KAAK,CAACC,IAAN,CAAW,KAAKT,QAAL,CAAcW,IAAd,EAAX,CAAP;AACD,GAnBkB;;AAqBT,MAAIC,OAAJ,GAAc;AACtB,WAAOJ,KAAK,CAACC,IAAN,CAAW,KAAKT,QAAL,CAAcY,OAAd,EAAX,CAAP;AACD,GAvBkB;;AA0BT,MAAIC,IAAJ,GAAW;AACnB,WAAO,KAAKb,QAAL,CAAca,IAArB;AACD,GA5BkB;;AA+BnBC,EAAAA,QAAQ,GAAG;AACT,QAAIP,MAAM,GAAG,EAAb;;AACA,SAAKP,QAAL,CAAce,OAAd,CAAsB,CAACC,KAAD,EAAQC,GAAR,EAAaC,GAAb,KAAqB;AACzCX,MAAAA,MAAM,CAACU,GAAD,CAAN,GAAcD,KAAd;AACD,KAFD;;AAGA,WAAOT,MAAP;AACD,GArCkB;;AAuCnBY,EAAAA,IAAI,GAAG;AACL,WAAO,KAAKnB,QAAL,CAAcmB,IAAd,EAAP;AACD;;AAzCkB,CAAH,gDAEfvB,UAFe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mDAIfE,MAJe,gGASfA,MATe,mGAafD,QAbe,oGAiBfA,QAjBe,qGAqBfA,QArBe,qGA0BfA,QA1Be,+DAAlB;AA+CA,eAAeE,YAAf","sourcesContent":["/*\r\n * Copyright (c) 2018. CreyptTech Yazılım\r\n * Author : Cihan Ozturk\r\n *\r\n */\r\n\r\nimport { observable, computed, action } from \"mobx\";\r\n\r\nconst StoreManager = {\r\n\r\n  @observable __stores: new Map(),\r\n\r\n  @action add(alias, store) {\r\n\r\n    this.__stores.set(alias, store);\r\n  },\r\n\r\n  @action get(alias) {\r\n    return this.__stores.get(alias);\r\n  },\r\n\r\n  @computed get stores() {\r\n    return Array.from(this.__stores.values());\r\n  }\r\n  ,\r\n  @computed get keys() {\r\n    return Array.from(this.__stores.keys());\r\n  }\r\n  ,\r\n  @computed get entries() {\r\n    return Array.from(this.__stores.entries());\r\n  }\r\n  ,\r\n\r\n  @computed get size() {\r\n    return this.__stores.size;\r\n  }\r\n  ,\r\n\r\n  toObject() {\r\n    let stores = {};\r\n    this.__stores.forEach((value, key, map) => {\r\n      stores[key] = value;\r\n    });\r\n    return stores;\r\n  }\r\n  ,\r\n  toJS() {\r\n    return this.__stores.toJS();\r\n  }\r\n\r\n\r\n};\r\n\r\n\r\nexport default StoreManager;"],"file":"StoreManager.js"}