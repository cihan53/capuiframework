{"version":3,"sources":["../../../../src/Lib/CAP/Form/ComboBox.js"],"names":["React","observer","PropTypes","Col","FormFeedback","FormGroup","Input","Label","FormText","Field","Utils","StoreManager","ComboBox","props","autoload","data","store","key","ShortId","generate","generateItems","bind","init","get","storeName","name","baseParams","defaultSort","setParameters","setDefaultSortDir","dir","sort","Error","__t","hasOwnProperty","currentIndex","load","page","start","size","limit","event","Attributes","target","isValid","value","setAttr","Translate","map","opt","index","valueField","displayField","valid","invalid","config","errorMessage","state","error","allowBlank","input","optionItems","items","defaultValue","inputName","id","placeholder","onChange","layout","options","col","label","labelCol","text","propTypes","any","string","required"],"mappings":"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","sourcesContent":["/*\r\n * Copyright (c) 2019. Crypttech Yazılım\r\n * Author: Cihan Öztürk\r\n * Email: cihanozturk@crypttech.com\r\n */\r\n\r\nimport React from \"react\";\r\nimport {observer} from \"mobx-react/index\";\r\nimport PropTypes from \"prop-types\";\r\nimport {Col, FormFeedback, FormGroup, Input, Label, FormText} from \"reactstrap\";\r\nimport Field from \"./Field\";\r\nimport Utils from \"../Utils/Utils\";\r\nimport StoreManager from \"../../StoreManager\";\r\n\r\n\r\n@observer\r\nexport default class ComboBox extends Field {\r\n\r\n    autoload = true;\r\n    data = [];\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.store = null;\r\n        this.key = this.props.key || Utils.ShortId.generate();\r\n        this.generateItems = this.generateItems.bind(this);\r\n        this.init()\r\n    }\r\n\r\n    init() {\r\n\r\n        if (this.props.store) {\r\n            if (typeof  this.props.store == \"string\") {\r\n                this.store = StoreManager.get(this.props.store) || null;\r\n            } else {\r\n                let storeName = this.props.store.name;\r\n                let baseParams = this.props.store.baseParams || null;\r\n                let defaultSort = this.props.store.defaultSort || null;\r\n                this.store = StoreManager.get(storeName) || null;\r\n                if (this.store && baseParams)\r\n                    this.store.setParameters(baseParams);\r\n\r\n                if (this.store && defaultSort) {\r\n                    this.store.setDefaultSortDir(defaultSort.dir, defaultSort.sort);\r\n                }\r\n            }\r\n\r\n\r\n            if (!this.store)\r\n                throw new Error(Utils.__t(\"Data Store Tanımsız\"));\r\n\r\n\r\n            this.autoload = this.props.hasOwnProperty('autoload') ? this.props.autoload : true;\r\n        }\r\n\r\n    }\r\n\r\n    componentWillMount() {\r\n        const currentIndex = 0;\r\n        if (this.store && this.autoload)\r\n            this.store.load({page: 0, start: currentIndex, size: this.limit})\r\n    }\r\n\r\n\r\n\r\n\r\n    /**\r\n     *\r\n     * @param event\r\n     */\r\n    onChange(event) {\r\n\r\n        if (this.store.Attributes.hasOwnProperty(event.target.name)) {\r\n\r\n            if (!this.isValid(event.target.name, event.target.value)) {\r\n                this.store.setAttr(event.target.name, event.target.value);\r\n            }\r\n        } else {\r\n            throw Utils.Translate(\"Tanımlanmamış alan adı\");\r\n        }\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param data\r\n     * @returns {*}\r\n     */\r\n    generateItems(data) {\r\n\r\n        if(this.store){\r\n            return data.map((opt, index) => {\r\n                return <option key={this.key + \"-combobox-item-\" + index} value={opt[this.props.valueField]}>{opt[this.props.displayField]}</option>\r\n            });\r\n        }else{\r\n            return data.map((opt, index) => {\r\n                return <option key={this.key + \"-combobox-item-\" + index} value={opt.value}>{opt.name}</option>\r\n            });\r\n        }\r\n\r\n    }\r\n\r\n    render() {\r\n\r\n\r\n        let valid = false;\r\n        let invalid = false;\r\n        let config = this.props;\r\n        let errorMessage = this.state.error;\r\n\r\n        if (config.allowBlank) {\r\n            valid = false;\r\n            invalid = false;\r\n        }\r\n        // let allowedProps =[\"defaultValue\",\"valid\",\"invalid\",\"type\",\"name\",\"id\",\"placeholder\"];\r\n\r\n\r\n        let input = null;\r\n        let optionItems = this.generateItems(this.store ? this.store.data : config.items);\r\n\r\n        if (config.store == null) {\r\n            input = <Input defaultValue={config.defaultValue}\r\n                           valid={valid}\r\n                           invalid={invalid}\r\n                           type={\"select\"}\r\n                           default\r\n                           name={config.inputName}\r\n                           id={config.id || this.key}\r\n                           placeholder={config.placeholder}\r\n            >{optionItems}</Input>;\r\n        } else {\r\n\r\n\r\n            input = <Input defaultValue={config.defaultValue || \"\"}\r\n                           valid={valid}\r\n                           invalid={invalid}\r\n                           type={\"select\"}\r\n                           default\r\n                           name={config.inputName}\r\n                           id={config.id || config.inputName + \"-form-field\"}\r\n                           value={this.store.Attributes[config.valueField]}\r\n                           placeholder={config.placeholder}\r\n                           onChange={this.onChange}\r\n            >{optionItems}</Input>\r\n        }\r\n\r\n\r\n        if (config.layout == \"row\")\r\n            input = <Col sm={config.options.col}>{input}</Col>;\r\n\r\n\r\n        return <FormGroup row={config.layout == \"row\"}>\r\n            {config.label && config.layout != \"row\" ? <Label htmlFor={config.id || config.inputName + \"-form-field\"}>{config.label}</Label> : \"\"}\r\n            {config.label && config.layout == \"row\" ? <Label htmlFor={config.id || config.inputName + \"-form-field\"} sm={config.options.labelCol}>{config.label}</Label> : \"\"}\r\n            {input}\r\n            {errorMessage ? <FormFeedback valid tooltip>{errorMessage}</FormFeedback> : void(0)}\r\n            {config.text && config.text != \"\" ? <FormText>{config.text}</FormText> : void (0)}\r\n        </FormGroup>;\r\n    }\r\n}\r\n\r\n\r\nField.propTypes = {\r\n    valueField: PropTypes.any,\r\n    displayField: PropTypes.any,\r\n    inputName: PropTypes.string.required,\r\n    options: PropTypes.any,\r\n    // data: PropTypes.any.required,\r\n};"],"file":"ComboBox.js"}