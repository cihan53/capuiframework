{"version":3,"sources":["../../../../src/Lib/CAP/Form/Field.js"],"names":["React","observer","PropTypes","Col","FormFeedback","FormGroup","Input","Label","FormText","Utils","Validator","StoreManager","Field","props","state","error","onChange","bind","isValid","rule","valid","invalid","store","get","config","allowBlank","push","concat","split","setInterval","plus","inputname","fieldValid","count","event","Attributes","hasOwnProperty","target","name","value","setAttr","Translate","input","getAttr","inputName","defaultValue","options","type","id","placeholder","layout","col","label","labelCol","length","message","join","text","Component","defaultProps","ShortId","generate","addon","validateClass","propTypes","any"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport {observer} from \"mobx-react/index\";\r\nimport PropTypes from \"prop-types\";\r\nimport {Col, FormFeedback, FormGroup, Input, Label, FormText} from \"reactstrap\";\r\nimport Utils from \"../Utils/Utils\";\r\nimport Validator from \"../Utils/Validator\";\r\nimport StoreManager from \"../../StoreManager\";\r\n\r\n@observer\r\nexport default class Field extends React.Component {\r\n    static defaultProps = {\r\n        id: Utils.ShortId.generate(),\r\n        inputName: \"\",\r\n        label: \"\",\r\n        defaultValue: \"\",\r\n        placeholder: \"\",\r\n        allowBlank: true,\r\n        rule: null,\r\n        addon: true,\r\n        layout: \"\", // inline | row,\r\n        store: null,\r\n        options: {\r\n            validateClass: \"danger\",\r\n            col: \"10\",\r\n            labelCol: \"2\",\r\n            type: \"input\"\r\n        }\r\n    };\r\n\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {error: null};\r\n        this.onChange = this.onChange.bind(this);\r\n        this.isValid = this.isValid.bind(this);\r\n        this.rule = [];\r\n        this.valid = null;\r\n        this.invalid = false;\r\n\r\n        this.store = StoreManager.get('ModuleAdminStore')\r\n\r\n        let config = this.props;\r\n        if (!config.allowBlank) {\r\n            this.rule.push(\"required\")\r\n        }\r\n\r\n        if (this.props.rule && this.props.rule != \"\") {\r\n            this.rule = Utils.concat(this.rule, this.props.rule.split(\"|\"))\r\n        }\r\n        setInterval(10000,this.plus )\r\n\r\n\r\n    }\r\n\r\n    isValid(inputname) {\r\n        return Validator.fieldValid(inputname)\r\n    }\r\n\r\n\r\n    plus() {\r\n\r\n        StoreManager.get(\"NotifyStore\").count = StoreManager.get(\"NotifyStore\").count + 1;\r\n    }\r\n\r\n    onChange(event) {\r\n\r\n        if (this.store.Attributes.hasOwnProperty(event.target.name)) {\r\n\r\n            if (!this.isValid(event.target.name, event.target.value)) {\r\n                this.store.setAttr(event.target.name, event.target.value);\r\n            }\r\n        } else {\r\n            throw Utils.Translate(\"Tanımlanmamış alan adı\");\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        let config = this.props;\r\n        let input = null;\r\n        let value = \"\";\r\n\r\n\r\n        if (this.store != null)\r\n            value = this.store.getAttr[config.inputName] || \"\";\r\n\r\n\r\n        if (this.store == null) {\r\n            input = <Input defaultValue={config.defaultValue}\r\n                           valid={this.valid}\r\n                           invalid={this.invalid}\r\n                           type={config.options.type}\r\n                           default\r\n                           name={config.inputName}\r\n                           id={config.id}\r\n                           placeholder={config.placeholder}\r\n            />;\r\n        } else {\r\n\r\n            input = <Input\r\n                           valid={this.valid}\r\n                           invalid={this.invalid}\r\n                           type={config.options.type}\r\n                           default\r\n                           name={config.inputName}\r\n                           id={config.id}\r\n                           value={value}\r\n                           placeholder={config.placeholder}\r\n                           onChange={this.onChange}\r\n            />;\r\n        }\r\n        if (config.layout == \"row\")\r\n            input = <Col sm={config.options.col}>{input}</Col>\r\n\r\n\r\n        return <FormGroup row={config.layout == \"row\"}>\r\n            {config.label && config.layout != \"row\" ? <Label htmlFor={config.id}>{config.label}</Label> : \"\"}\r\n            {config.label && config.layout == \"row\" ? <Label htmlFor={config.id} sm={config.options.labelCol}>{config.label}</Label> : \"\"}\r\n            {input}\r\n\r\n            {/*{Validator.message(config.inputName, value, this.rule.join(\"|\"))}*/}\r\n            <FormFeedback>\r\n                {this.rule.length > 0 ? Validator.message(config.inputName, value, this.rule.join(\"|\")) : \"\"}\r\n            </FormFeedback>\r\n            {config.text && config.text != \"\" ? <FormText>{config.text}</FormText> : \"\"}\r\n        </FormGroup>;\r\n    }\r\n}\r\n\r\n\r\nField.propTypes = {\r\n    options: PropTypes.any,\r\n    // inputName: PropTypes.string.required\r\n};"],"file":"Field.js"}