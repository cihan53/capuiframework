{"version":3,"sources":["../../../../src/Lib/CAP/Form/DropZone.js"],"names":["React","useCallback","useDropzone","Utils","Dropzone","props","_acceptedFiles","acceptedFiles","maxSize","maxFiles","onDrop","getRootProps","getInputProps","open","minSize","noClick","noKeyboard","files","map","file","path","size","fileList","Translate","className","dragtext","dialogbuttontext","defaultProps"],"mappings":"AAAA;;;;;AAMA,OAAOA,KAAP,IAAeC,WAAf,QAAgC,OAAhC;AACA,SAAQC,WAAR,QAA0B,gBAA1B;AACA,OAAOC,KAAP,MAAkB,gBAAlB;;AAEA,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AAErB,MAAIC,cAAc,GAAED,KAAK,CAACE,aAAN,IAAuB,IAA3C;;AACA,QAAMC,OAAO,GAAG,UAAU,GAA1B,CAHqB,CAGU;;AAC/B,QAAMC,QAAQ,GAAG,CAAjB;AAEA,QAAMC,MAAM,GAAGT,WAAW,CAACM,aAAa,IAAI;AACxC;AACAD,IAAAA,cAAc,GAAC,IAAf;AACAD,IAAAA,KAAK,CAACK,MAAN,CAAaH,aAAb;AACH,GAJyB,EAIvB,EAJuB,CAA1B;AAOA,QAAM;AAACI,IAAAA,YAAD;AAAeC,IAAAA,aAAf;AAA8BC,IAAAA,IAA9B;AAAoCN,IAAAA;AAApC,MAAqDL,WAAW,CAAC;AACnE;AACAQ,IAAAA,MAFmE;AAGnEI,IAAAA,OAAO,EAAE,CAH0D;AAInEN,IAAAA,OAAO,EAACA,OAJ2D;AAKnEC,IAAAA,QAAQ,EAACA,QAL0D;AAMnEM,IAAAA,OAAO,EAAE,IAN0D;AAOnEC,IAAAA,UAAU,EAAE,IAPuD,CAQnE;;AARmE,GAAD,CAAtE;;AAWA,QAAMC,KAAK,GAAG,CAAEX,cAAc,IAAIC,aAApB,EAAqCW,GAArC,CAAyCC,IAAI,IACvD;AAAI,IAAA,GAAG,EAAEA,IAAI,CAACC;AAAd,KACKD,IAAI,CAACC,IADV,SACmBD,IAAI,CAACE,IADxB,WADU,CAAd;AAMA;;;;;;;AAKA,QAAMC,QAAQ,GAACL,KAAK,IAAE;AACnB,WAAO,mCACF,gCAAKd,KAAK,CAACoB,SAAN,CAAgB,kBAAhB,CAAL,CADE,EAEF,gCAAKN,KAAL,CAFE,CAAP;AAIF,GALD;;AAOA,SACI;AAAK,IAAA,SAAS,EAAC;AAAf,KACI,2BAASN,YAAY,CAAC;AAACa,IAAAA,SAAS,EAAE;AAAZ,GAAD,CAArB,EACI,6BAAWZ,aAAa,EAAxB,CADJ,EAEI,+BAAIP,KAAK,CAACoB,QAAV,CAFJ,EAGI;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAsB,IAAA,OAAO,EAAEZ;AAA/B,UAAuCR,KAAK,CAACqB,gBAA7C,MAHJ,CADJ,EAMKJ,QAAQ,CAACL,KAAD,CANb,CADJ;AAUH,C,CAED;;;AACAb,QAAQ,CAACuB,YAAT,GAAwB;AACpBF,EAAAA,QAAQ,EAAEtB,KAAK,CAACoB,SAAN,CAAgB,gDAAhB,CADU;AAEpBG,EAAAA,gBAAgB,EAAEvB,KAAK,CAACoB,SAAN,CAAgB,WAAhB;AAFE,CAAxB;AAKA,eAAenB,QAAf","sourcesContent":["/*\r\n * Copyright (c) 2019. Crypttech Yazılım\r\n * Author: Cihan Öztürk\r\n * Email: cihanozturk@crypttech.com\r\n */\r\n\r\nimport React ,{useCallback}from 'react';\r\nimport {useDropzone} from 'react-dropzone';\r\nimport Utils from \"../Utils/Utils\";\r\n\r\nfunction Dropzone(props) {\r\n\r\n    let _acceptedFiles= props.acceptedFiles || null;\r\n    const maxSize = 1048576 * 100; //100MB\r\n    const maxFiles = 5;\r\n\r\n    const onDrop = useCallback(acceptedFiles => {\r\n        // Do something with the files\r\n        _acceptedFiles=null;\r\n        props.onDrop(acceptedFiles)\r\n    }, [])\r\n\r\n\r\n    const {getRootProps, getInputProps, open, acceptedFiles} = useDropzone({\r\n        // Disable click and keydown behavior\r\n        onDrop,\r\n        minSize: 0,\r\n        maxSize:maxSize,\r\n        maxFiles:maxFiles,\r\n        noClick: true,\r\n        noKeyboard: true,\r\n        //accept:\"application/zip, application/x-bzip, application/x-bzip2\"\r\n    });\r\n\r\n    const files = ( _acceptedFiles || acceptedFiles  ).map(file => (\r\n        <li key={file.path}>\r\n            {file.path} - {file.size} bytes\r\n        </li>\r\n    ));\r\n\r\n    /**\r\n     * seçilen dosya listesi\r\n     * @param files\r\n     * @returns {*}\r\n     */\r\n    const fileList=files=>{\r\n       return <aside>\r\n            <h4>{Utils.Translate('Seçilen dosyalar')}</h4>\r\n            <ul>{files}</ul>\r\n        </aside>\r\n    }\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <div {...getRootProps({className: 'dropzone'})}>\r\n                <input {...getInputProps()} />\r\n                <p>{props.dragtext}</p>\r\n                <button type=\"button\" onClick={open}> {props.dialogbuttontext} </button>\r\n            </div>\r\n            {fileList(files)}\r\n        </div>\r\n    );\r\n}\r\n\r\n// Set default props\r\nDropzone.defaultProps = {\r\n    dragtext: Utils.Translate('Bir veya birden fazla dosya sürükleyip bırakın'),\r\n    dialogbuttontext: Utils.Translate('Dosya seç')\r\n};\r\n\r\nexport default Dropzone;\r\n"],"file":"DropZone.js"}