{"version":3,"sources":["../../../../src/Lib/CAP/Form/FormPanel.js"],"names":["React","ReactDOM","observer","PropTypes","Utils","Panel","Button","Form","Validator","Xtypes","FormPanel","props","key","ShortId","generate","submit","bind","getValues","createItems","isEmpty","config","footer","name","Translate","formRef","createRef","children","event","preventDefault","values","onSubmit","valid","store","validate","data","scenario","validator","message","val","undefined","rule","formData","FormData","findDOMNode","current","entry","entries","Attributes","items","map","e","i","id","layout","hasOwnProperty","Cp","Container","xtype","createElement","_Panel","render","_renderItem","Component","defaultProps","options","optionsBody","optionsTitle","optionsHeader","optionsFooter","title","header","propTypes","string","isRequired","func","object","any","array"],"mappings":";;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,KAAKC,QAAZ,MAA0B,WAA1B;AACA,SAAQC,QAAR,QAAuB,kBAAvB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,KAAP,MAAkB,gBAAlB;AACA,OAAOC,KAAP,MAAkB,gBAAlB;AACA,SAAQC,MAAR,EAAgBC,IAAhB,QAA2B,YAA3B;AAEA,OAAOC,SAAP,MAAsB,oBAAtB;AACA,SAAQC,MAAR,QAAqB,yBAArB;;IAIqBC,S,GADpBR,Q;;;;;AAGG;AAqBA,qBAAYS,KAAZ,EAAmB;AAAA;;AAAA;;AACf,mFAAMA,KAAN;AACA,UAAKC,GAAL,GAAW,MAAKD,KAAL,CAAWC,GAAX,IAAkBR,KAAK,CAACS,OAAN,CAAcC,QAAd,EAA7B;AACA,UAAKC,MAAL,GAAc,MAAKA,MAAL,CAAYC,IAAZ,+BAAd;AACA,UAAKC,SAAL,GAAiB,MAAKA,SAAL,CAAeD,IAAf,+BAAjB;AACA,UAAKE,WAAL,GAAmB,MAAKA,WAAL,CAAiBF,IAAjB,+BAAnB;;AAEA,QAAIZ,KAAK,CAACe,OAAN,CAAc,MAAKR,KAAL,CAAWS,MAAX,CAAkBC,MAAhC,CAAJ,EAA6C;AACzC,YAAKV,KAAL,CAAWS,MAAX,CAAkBC,MAAlB,GAA2B,CACvB,oBAAC,MAAD;AAAQ,QAAA,IAAI,EAAE,QAAd;AAAwB,QAAA,GAAG,EAAE,MAAKT,GAAL,GAAW,WAAxC;AAAqD,QAAA,IAAI,EAAE,MAAKD,KAAL,CAAWW;AAAtE,SAA4E;AAAG,QAAA,SAAS,EAAC;AAAb,QAA5E,OAAiHlB,KAAK,CAACmB,SAAN,CAAgB,MAAhB,CAAjH,CADuB,CAA3B;AAGH;;AAED,UAAKC,OAAL,GAAexB,KAAK,CAACyB,SAAN,EAAf;AACA,UAAKC,QAAL,GAAgB,IAAhB;AACA,UAAKlB,SAAL,GAAiBA,SAAjB;AAfe;AAiBlB;;;;2BAEMmB,K,EAAO;AACVA,MAAAA,KAAK,CAACC,cAAN;AACA,UAAIC,MAAM,GAAG,KAAKZ,SAAL,EAAb;AACA,WAAKN,KAAL,CAAWmB,QAAX,CAAoBD,MAApB,EAA4B,IAA5B;AACH;AAED;;;;;;8BAGU;AACN,UAAIE,KAAK,GAAG,IAAZ;AACA,UAAIF,MAAM,GAAG,KAAKZ,SAAL,EAAb;;AACA,UAAI,KAAKN,KAAL,CAAWqB,KAAX,IAAoB,IAAxB,EAA8B;AAC1BD,QAAAA,KAAK,GAAG,KAAKpB,KAAL,CAAWqB,KAAX,CAAiBC,QAAjB,CAA0BJ,MAA1B,CAAR;AACH,OAFD,MAEO;AACH,eAAO,KAAKI,QAAL,CAAcJ,MAAd,CAAP;AACH;;AAED,aAAOE,KAAP;AACH;;;6BAEQG,I,EAAMC,QAAQ,GAAG,S,EAAW;AACjC,WAAKC,SAAL,CAAeC,OAAf,CAAuBC,GAAG,CAAChB,IAA3B,EAAiCY,IAAI,CAACI,GAAG,CAAChB,IAAL,CAAJ,KAAmBiB,SAAnB,GAA+BL,IAAI,CAACI,GAAG,CAAChB,IAAL,CAAnC,GAAgD,EAAjF,EAAqFgB,GAAG,CAACE,IAAzF,EAA+F;AAACH,QAAAA,OAAO,EAAEC,GAAG,CAACD;AAAd,OAA/F;AACH;AAED;;;;;;gCAGY;AACR,UAAIR,MAAM,GAAG,EAAb;;AACA,UAAI,KAAKlB,KAAL,CAAWqB,KAAX,IAAoB,IAAxB,EAA8B;AAC1B,cAAMS,QAAQ,GAAG,IAAIC,QAAJ,CAAazC,QAAQ,CAAC0C,WAAT,CAAqB,KAAKnB,OAAL,CAAaoB,OAAlC,CAAb,CAAjB;;AACA,aAAK,IAAIC,KAAT,IAAkBJ,QAAQ,CAACK,OAAT,EAAlB,EAAsC;AAClCjB,UAAAA,MAAM,CAACgB,KAAK,CAAC,CAAD,CAAN,CAAN,GAAmBhB,MAAM,CAAC,CAAD,CAAzB;AACH;AACJ,OALD,MAKO;AACHA,QAAAA,MAAM,GAAG,KAAKlB,KAAL,CAAWqB,KAAX,CAAiBe,UAA1B;AACH;;AAGD,aAAOlB,MAAP;AACH;AAED;;;;;;kCAGc;AACV,WAAKH,QAAL,GAAgB,KAAKf,KAAL,CAAWqC,KAAX,CAAiBC,GAAjB,CAAqB,CAACC,CAAD,EAAIC,CAAJ,KAAU;AAC3CD,QAAAA,CAAC,CAACE,EAAF,GAAO,KAAKzC,KAAL,CAAWW,IAAX,GAAkB,cAAlB,GAAmC6B,CAA1C;AACAD,QAAAA,CAAC,CAACtC,GAAF,GAAQ,KAAKA,GAAL,GAAW,cAAX,GAA4BuC,CAApC;AACAD,QAAAA,CAAC,CAAClB,KAAF,GAAU,KAAKrB,KAAL,CAAWqB,KAAX,IAAoB,IAA9B;AACAkB,QAAAA,CAAC,CAACG,MAAF,GAAW,KAAK1C,KAAL,CAAW0C,MAAX,IAAqB,IAAhC;;AACA,YAAIH,CAAC,CAACI,cAAF,CAAiB,OAAjB,CAAJ,EAA+B;AAC3B;AACA,gBAAMC,EAAE,GAAGrD,QAAQ,CAAEmC,OAAD,IAAa;AAC7B,kBAAMmB,SAAS,GAAG/C,MAAM,CAACyC,CAAC,CAACO,KAAH,CAAxB;AACA,mBAAO,oBAAC,SAAD,EAAepB,OAAf,CAAP;AACH,WAHkB,CAAnB,CAF2B,CAQ3B;;AACA,iBAAO,oBAAC,EAAD;AAAI,YAAA,CAAC,EAAEa;AAAP,YAAP;AACH,SAVD,MAUO;AACH,iBAAO9C,KAAK,CAACsD,aAAN,CAAoBR,CAApB,CAAP;AACH,SAjB0C,CAkB3C;AACA;;AACH,OApBe,CAAhB;AAqBH;;;yCAEoB;AACjB,WAAKhC,WAAL;AACH;;;kCAEY;AACT,YAAMyC,MAAM,GAAG,IAAItD,KAAJ,CAAU,KAAKM,KAAf,CAAf;;AACA,aAAOgD,MAAM,CAACC,MAAP,CAAc,KAAKlC,QAAnB,CAAP;AACH;;;6BAEQ;AAGL,aAAO,oBAAC,IAAD;AAAM,QAAA,GAAG,EAAE,KAAKF,OAAhB;AAAyB,QAAA,EAAE,EAAE,KAAKb,KAAL,CAAWW,IAAxC;AAA8C,QAAA,IAAI,EAAE,KAAKX,KAAL,CAAWW,IAA/D;AAAqE,QAAA,QAAQ,EAAE4B,CAAC,IAAI,KAAKnC,MAAL,CAAYmC,CAAZ;AAApF,SACF,KAAKW,WAAL,EADE,CAAP;AAGH;;;;EA/HkC7D,KAAK,CAAC8D,S,WAGlCC,Y,GAAe;AAClBzC,EAAAA,IAAI,EAAE,YADY;AAElBQ,EAAAA,QAAQ,EAAGoB,CAAD,IAAO,CAEhB,CAJiB;AAKlB9B,EAAAA,MAAM,EAAE,EALU;AAMlB4C,EAAAA,OAAO,EAAE,EANS;AAOlBC,EAAAA,WAAW,EAAE,EAPK;AAQlBC,EAAAA,YAAY,EAAE,EARI;AASlBC,EAAAA,aAAa,EAAE,EATG;AAUlBC,EAAAA,aAAa,EAAE,EAVG;AAWlBC,EAAAA,KAAK,EAAE,IAXW;AAYlBC,EAAAA,MAAM,EAAE,aAZU;AAalBjD,EAAAA,MAAM,EAAE,KAbU;AAclB2B,EAAAA,KAAK,EAAE,EAdW;AAelBhB,EAAAA,KAAK,EAAE,IAfW;AAgBlByB,EAAAA,KAAK,EAAE,WAhBW;AAiBlBJ,EAAAA,MAAM,EAAE;AAjBU,C;;SAHL3C,S;AAoIrBA,SAAS,CAAC6D,SAAV,GAAsB;AAClBjD,EAAAA,IAAI,EAAEnB,SAAS,CAACqE,MAAV,CAAiBC,UADL;AAElB3C,EAAAA,QAAQ,EAAE3B,SAAS,CAACuE,IAAV,CAAeD,UAFP;AAGlBrD,EAAAA,MAAM,EAAEjB,SAAS,CAACwE,MAAV,CAAiBF,UAHP;AAIlBJ,EAAAA,KAAK,EAAElE,SAAS,CAACyE,GAJC;AAKlBN,EAAAA,MAAM,EAAEnE,SAAS,CAACyE,GALA;AAMlB5B,EAAAA,KAAK,EAAE7C,SAAS,CAAC0E,KANC;AAOlBb,EAAAA,OAAO,EAAE7D,SAAS,CAACyE,GAPD;AAQlB5C,EAAAA,KAAK,EAAE7B,SAAS,CAACyE;AARC,CAAtB","sourcesContent":["import React from \"react\";\r\nimport * as ReactDOM from \"react-dom\";\r\nimport {observer} from \"mobx-react/index\";\r\nimport PropTypes from \"prop-types\";\r\nimport Utils from \"../Utils/Utils\";\r\nimport Panel from \"../Panel/Panel\";\r\nimport {Button, Form} from \"reactstrap\";\r\n\r\nimport Validator from \"../Utils/Validator\";\r\nimport {Xtypes} from \"../../../Initialization\";\r\n\r\n\r\n@observer\r\nexport default class FormPanel extends React.Component{\r\n\r\n    // key= Utils.ShortId.generate();\r\n    static defaultProps = {\r\n        name: \"form-panel\",\r\n        onSubmit: (e) => {\r\n\r\n        },\r\n        config: {},\r\n        options: {},\r\n        optionsBody: {},\r\n        optionsTitle: {},\r\n        optionsHeader: {},\r\n        optionsFooter: {},\r\n        title: true,\r\n        header: \"Panel Title\",\r\n        footer: false,\r\n        items: [],\r\n        store: null,\r\n        xtype: \"formpanel\",\r\n        layout: null\r\n    };\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.key = this.props.key || Utils.ShortId.generate();\r\n        this.submit = this.submit.bind(this)\r\n        this.getValues = this.getValues.bind(this)\r\n        this.createItems = this.createItems.bind(this);\r\n\r\n        if (Utils.isEmpty(this.props.config.footer)) {\r\n            this.props.config.footer = [\r\n                <Button type={\"submit\"} key={this.key + \"-save-btn\"} form={this.props.name}><i className=\"fa fa-dot-circle-o\"/> {Utils.Translate(\"Save\")}</Button>\r\n            ];\r\n        }\r\n\r\n        this.formRef = React.createRef();\r\n        this.children = null;\r\n        this.Validator = Validator;\r\n\r\n    }\r\n\r\n    submit(event) {\r\n        event.preventDefault();\r\n        let values = this.getValues();\r\n        this.props.onSubmit(values, this)\r\n    }\r\n\r\n    /**\r\n     *\r\n     */\r\n    isValid() {\r\n        let valid = true;\r\n        let values = this.getValues();\r\n        if (this.props.store != null) {\r\n            valid = this.props.store.validate(values);\r\n        } else {\r\n            return this.validate(values);\r\n        }\r\n\r\n        return valid;\r\n    }\r\n\r\n    validate(data, scenario = \"default\") {\r\n        this.validator.message(val.name, data[val.name] !== undefined ? data[val.name] : \"\", val.rule, {message: val.message});\r\n    }\r\n\r\n    /**\r\n     * form values\r\n     */\r\n    getValues() {\r\n        let values = {};\r\n        if (this.props.store == null) {\r\n            const formData = new FormData(ReactDOM.findDOMNode(this.formRef.current))\r\n            for (let entry of formData.entries()) {\r\n                values[entry[0]] = values[1]\r\n            }\r\n        } else {\r\n            values = this.props.store.Attributes;\r\n        }\r\n\r\n\r\n        return values;\r\n    }\r\n\r\n    /**\r\n     *\r\n     */\r\n    createItems() {\r\n        this.children = this.props.items.map((e, i) => {\r\n            e.id = this.props.name + \"-child-item-\" + i;\r\n            e.key = this.key + \"-child-item-\" + i;\r\n            e.store = this.props.store || null;\r\n            e.layout = this.props.layout || null;\r\n            if (e.hasOwnProperty(\"xtype\")) {\r\n                //return Utils.CreateComponent(e);\r\n                const Cp = observer((message) => {\r\n                    const Container = Xtypes[e.xtype]\r\n                    return <Container {...message}/>\r\n                })\r\n\r\n\r\n                // const Cp = Observer(Xtypes[e.xtype]);\r\n                return <Cp p={e}/>\r\n            } else {\r\n                return Utils.createElement(e);\r\n            }\r\n            // return Utils.CreateComponent(e);\r\n            // return e;\r\n        });\r\n    }\r\n\r\n    componentWillMount() {\r\n        this.createItems();\r\n    }\r\n\r\n    _renderItem(){\r\n        const _Panel = new Panel(this.props);\r\n        return _Panel.render(this.children);\r\n    }\r\n\r\n    render() {\r\n\r\n\r\n        return <Form ref={this.formRef} id={this.props.name} name={this.props.name} onSubmit={e => this.submit(e)}>\r\n            {this._renderItem()}\r\n        </Form>;\r\n    }\r\n\r\n}\r\n\r\n\r\nFormPanel.propTypes = {\r\n    name: PropTypes.string.isRequired,\r\n    onSubmit: PropTypes.func.isRequired,\r\n    config: PropTypes.object.isRequired,\r\n    title: PropTypes.any,\r\n    header: PropTypes.any,\r\n    items: PropTypes.array,\r\n    options: PropTypes.any,\r\n    store: PropTypes.any\r\n};"],"file":"FormPanel.js"}