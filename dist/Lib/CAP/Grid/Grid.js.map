{"version":3,"sources":["../../../../src/Lib/CAP/Grid/Grid.js"],"names":["React","observer","PropTypes","BootstrapTable","paginationFactory","overlayFactory","filterFactory","cellEditFactory","StoreManager","Panel","Utils","ContextMenu","ExportCSVButton","defaultSorted","dataField","order","EmptyTableDataIndication","__t","Table","_ref","store","data","columns","page","sizePerPage","onTableChange","tableContextMenuRef","otherprops","cellEdit","totalSize","keyField","customTotal","from","to","size","props","tabIndexCell","remote","filter","overlay","spinner","background","noDataIndication","showTotal","pageStartIndex","paginationSize","pagination","withFirstAndLast","firstPageText","prePageText","nextPageText","lastPageText","firstPageTitle","prePageTitle","nextPageTitle","lastPageTitle","paginationTotalRenderer","hasOwnProperty","baseProps","id","onContextMenuClickItem","propTypes","array","isRequired","number","func","Grid","limit","autoload","config","xtype","handleTableChange","type","sortField","sortOrder","filters","currentIndex","load","start","afterSaveCell","_store","bind","init","configSet","key","ShortId","generate","xgrid","createRef","tableContextMenu","action","get","storeName","name","baseParams","defaultSort","setParameters","setDefaultSortDir","dir","sort","Error","Object","assign","newProps","newState","onBeforeRender","error","info","totalCount","currentPage","otherProps","keys","keyIndex","indexOf","contextMenu","T","toLocaleLowerCase","panelOptions","value","Component","string","any","defaultProps"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport {observer} from \"mobx-react/index\";\r\nimport PropTypes from \"prop-types\";\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport paginationFactory from \"react-bootstrap-table2-paginator\";\r\nimport overlayFactory from 'react-bootstrap-table2-overlay';\r\nimport filterFactory from \"react-bootstrap-table2-filter\";\r\nimport cellEditFactory from \"react-bootstrap-table2-editor\";\r\n\r\nimport StoreManager from \"../../StoreManager\";\r\nimport Panel from \"../Panel/Panel\";\r\nimport Utils from \"../Utils/Utils\";\r\nimport ContextMenu from \"./ContextMenu\";\r\nimport {ExportCSVButton} from \"./ToolKit\";\r\n\r\n\r\nconst defaultSorted = [{\r\n    dataField: \"name\",\r\n    order: \"desc\"\r\n}];\r\n\r\n\r\nconst EmptyTableDataIndication = () => (\r\n    <div>\r\n        <p>{Utils.__t(\"Kayıt yok\")}</p>\r\n    </div>\r\n);\r\n\r\n\r\nconst Table = ({_ref, store, data, columns, page, sizePerPage, onTableChange, tableContextMenuRef, otherprops, cellEdit = null, totalSize, keyField = \"id\"}) => {\r\n\r\n    const customTotal = (from, to, size) => (\r\n        <span\r\n            className=\"react-bootstrap-table-pagination-total\"> {Utils.__t(\"Toplam Kayıt: :size\", {size: size})}</span>\r\n    );\r\n\r\n    let props = {\r\n        tabIndexCell: true,\r\n        remote: true,\r\n        keyField: keyField,\r\n        data: data,\r\n        columns: columns,\r\n        defaultSorted: defaultSorted,\r\n        filter: filterFactory(),\r\n        onTableChange: onTableChange,\r\n        // overlay: overlayFactory(<LoadingSpinner key={Utils.ShortId.generate()}/>),\r\n        overlay: overlayFactory({spinner: true, background: 'rgba(192,192,192,0.3)'}),\r\n        noDataIndication: () => <EmptyTableDataIndication/>\r\n    };\r\n\r\n    //cell edit\r\n    if (cellEdit != null) {\r\n        props.cellEdit = cellEditFactory(cellEdit);\r\n    }\r\n\r\n    let showTotal = true;\r\n    let pageStartIndex = 1;\r\n    let paginationSize = 10;\r\n    if (otherprops.pagination)\r\n        props.pagination = paginationFactory({\r\n            withFirstAndLast: true,\r\n            page: page,\r\n            sizePerPage: sizePerPage,\r\n            totalSize: totalSize,\r\n            showTotal: showTotal,\r\n            pageStartIndex: pageStartIndex,\r\n            paginationSize: paginationSize,\r\n            firstPageText: Utils.__t(\"İlk Sayfa\"),\r\n            prePageText: Utils.__t(\"Önceki Sayfa\"),\r\n            nextPageText: Utils.__t(\"Sonraki Sayfa\"),\r\n            lastPageText: Utils.__t(\"Son Sayfa\"),\r\n            firstPageTitle: Utils.__t(\"İlk Sayfa\"),\r\n            prePageTitle: Utils.__t(\"Önceki Sayfa\"),\r\n            nextPageTitle: Utils.__t(\"Sonraki Sayfa\"),\r\n            lastPageTitle: Utils.__t(\"Son Sayfa\"),\r\n            paginationTotalRenderer: customTotal\r\n        });\r\n\r\n    delete otherprops.pagination;\r\n\r\n\r\n    // const ContextMenu = onContextMenu;\r\n\r\n\r\n    return <React.Fragment>\r\n\r\n        {/*<ExportPdfButton data={data} />*/}\r\n        {/*<CSVDownload data={data} target=\"_blank\"/>;*/}\r\n        {otherprops.hasOwnProperty('buttons') ? <ExportCSVButton data={store.data} columns={columns}/> : void (0)}\r\n        <BootstrapTable ref={_ref} {...props.baseProps} {...props} {...otherprops}  />\r\n        <ContextMenu container={otherprops.id} ref={tableContextMenuRef}\r\n                     clickItem={otherprops.onContextMenuClickItem || void (0)}/>\r\n    </React.Fragment>\r\n\r\n};\r\n\r\nTable.propTypes = {\r\n    data: PropTypes.array.isRequired,\r\n    page: PropTypes.number.isRequired,\r\n    totalSize: PropTypes.number.isRequired,\r\n    sizePerPage: PropTypes.number.isRequired,\r\n    onTableChange: PropTypes.func.isRequired\r\n};\r\n\r\n/**\r\n * eğer sutun filitreleme açık ise\r\n * autoload false yapılmalı.\r\n *\r\n *\r\n */\r\n@observer\r\nexport default class Grid extends React.Component {\r\n\r\n    store = null;\r\n    data = null;\r\n    limit = 50;\r\n    autoload = true;\r\n    columns = [];\r\n\r\n    /**\r\n     * Bu alan yeni eklendi ve buna göre diğer tüm değişiklikler sırası geldiğinde yapılamlı\r\n     * tüm ayarlar config nesnesinde toplanmalı\r\n     * @type {{xtype: string}}\r\n     */\r\n    config = {\r\n        xtype: \"grid\"\r\n    }\r\n\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this._store = null;\r\n\r\n        this.handleTableChange = this.handleTableChange.bind(this);\r\n        this.init = this.init.bind(this);\r\n        this.configSet = this.configSet.bind(this);\r\n\r\n        this.key = Utils.ShortId.generate();\r\n        this.xgrid = React.createRef();\r\n        this.tableContextMenu = React.createRef();\r\n\r\n        this.configSet();\r\n        this.init();\r\n\r\n\r\n    }\r\n\r\n    init(action = \"\") {\r\n\r\n\r\n        if (this.props.config.store) {\r\n            if (typeof this.props.config.store == \"string\") {\r\n                this._store = StoreManager.get(this.props.config.store) || null;\r\n\r\n            } else {\r\n                let storeName = this.props.config.store.name;\r\n                let baseParams = this.props.config.store.baseParams || null;\r\n                let defaultSort = this.props.config.store.defaultSort || null;\r\n                this._store = StoreManager.get(storeName) || null;\r\n                if (this.store && baseParams)\r\n                    this.store.setParameters(baseParams);\r\n\r\n                if (this.store && defaultSort) {\r\n                    this.store.setDefaultSortDir(defaultSort.dir, defaultSort.sort);\r\n                }\r\n            }\r\n\r\n            if (!this.store)\r\n                throw new Error(\"Undefined Store\");\r\n\r\n            this.autoload = this.props.config.hasOwnProperty('autoload') ? this.props.config.autoload : true;\r\n\r\n\r\n            //this.store.load();\r\n        } else if (this.props.config.data) {\r\n            this.data = this.props.config.data || [];\r\n            this.autoload = false;\r\n        } else {\r\n            throw new Error(\"Undefined Store\");\r\n        }\r\n\r\n        //columns setting\r\n\r\n\r\n    }\r\n\r\n    configSet() {\r\n        this.config = Object.assign(this.config, this.props.config);\r\n        this.columns = this.props.config.columns || [];\r\n    }\r\n\r\n\r\n    get store() {\r\n        return this._store;\r\n    }\r\n\r\n    set store(value) {\r\n        this._store = value;\r\n    }\r\n\r\n    shouldComponentUpdate(newProps, newState) {\r\n        if (this.props != newProps) this.init(\"propsChange\");\r\n        return this.props != newProps\r\n    }\r\n\r\n    //render before\r\n    componentWillMount() {\r\n        if (this.props.config.hasOwnProperty('onBeforeRender')) {\r\n            this.props.config.onBeforeRender(this);\r\n        }\r\n    }\r\n\r\n\r\n    componentWillUpdate() {\r\n\r\n        if (this.props.config.hasOwnProperty('onBeforeRender')) {\r\n            this.props.config.onBeforeRender(this);\r\n        }\r\n    }\r\n\r\n    componentDidCatch(error, info) {\r\n        // Hatanızı bir hata bildirimi servisine de yollayabilirsiniz.\r\n        //logErrorToMyService(error, info)\r\n\r\n    }\r\n\r\n    handleTableChange = (type, {\r\n        page,  // newest page\r\n        sizePerPage,  // newest sizePerPage\r\n        sortField,  // newest sort field\r\n        sortOrder,  // newest sort order\r\n        filters, // an object which have current filter status per column\r\n        data, // when you enable remote sort, you may need to base on data to sort if data is filtered/searched\r\n        cellEdit\r\n    }) => {\r\n        if (type != \"cellEdit\") {\r\n            let currentIndex = (page - 1) * sizePerPage;\r\n            currentIndex = currentIndex < 0 ? 0 : currentIndex\r\n\r\n            this.store.load({\r\n                page: page,\r\n                start: currentIndex,\r\n                size: sizePerPage,\r\n                sortField: sortField,\r\n                sortOrder: sortOrder,\r\n                filters: filters\r\n            });\r\n        } else {\r\n            if (this.props.config.hasOwnProperty(\"cellEdit\")) {\r\n                if (this.props.config.cellEdit.hasOwnProperty(\"afterSaveCell\")) {\r\n\r\n                    /**\r\n                     * cellEdit\r\n                     *    { rowId,   dataField,  newValue }\r\n                     */\r\n                    this.props.config.cellEdit.afterSaveCell(data, cellEdit);\r\n                }\r\n            }\r\n        }\r\n\r\n        // CAP.Log(type,this )\r\n    };\r\n\r\n    componentWillMount() {\r\n        const currentIndex = 0;\r\n        if (this.autoload)\r\n            this.store.load({page: 0, start: currentIndex, size: this.limit});\r\n    }\r\n\r\n    render() {\r\n\r\n        const {totalCount = 0, limit = this.limit, currentPage = 0} = this.store || {\r\n            totalCount: 0,\r\n            limit: this.limit,\r\n            page: 0\r\n        };\r\n        const data = this.store ? this.store.data : this.data;\r\n\r\n\r\n        //other props\r\n        let otherProps = {};\r\n\r\n        //keyfield\r\n        let keyField = this.store ? this.store.keyField : \"id\";\r\n        if (this.props.config.hasOwnProperty(\"keyField\"))\r\n            keyField = this.props.config.keyField;\r\n\r\n        //cell Editor\r\n        let cellEdit = null;\r\n        if (this.props.config.hasOwnProperty(\"cellEdit\")) {\r\n            cellEdit = this.props.config.cellEdit;\r\n        }\r\n\r\n\r\n        //bunlar varsayılan props'lar bunlar haricindeki tüm prop'lar otherprops eklenecek\r\n        const props = [\"store\", \"keyField\", \"data\", \"currentPage\", \"sizePerPage\", \"columns\", \"totalSize\", \"onTableChange\", \"panelOptions\", \"xtype\", \"cellEdit\", \"tableContextMenuRef\"];\r\n        const keys = Object.keys(this.props.config);\r\n        for (const keyIndex in keys) {\r\n            const key = keys[keyIndex];\r\n            if (props.indexOf(key) == -1) {\r\n                otherProps[key] = this.props.config[key];\r\n            }\r\n        }\r\n\r\n\r\n        let contextMenu = null;\r\n        let T = <Table\r\n            _ref={this.xgrid}\r\n            key={this.key + \"-gridtable\"}\r\n            keyField={keyField}\r\n            data={data}\r\n            page={currentPage}\r\n            sizePerPage={limit}\r\n            columns={this.columns}\r\n            totalSize={totalCount}\r\n            otherprops={otherProps}\r\n            onTableChange={this.handleTableChange}\r\n            cellEdit={cellEdit}\r\n            tableContextMenuRef={this.tableContextMenu}\r\n            store={this.store}\r\n        />;\r\n\r\n\r\n        if (this.config.xtype.toLocaleLowerCase() == \"gridpanel\") {\r\n\r\n            return <Panel _key={this.key + \"-gridPanel\"} items={[T]} config={this.props.config.panelOptions}/>;\r\n        }\r\n\r\n\r\n        return <React.Fragment>{T}</React.Fragment>;\r\n    }\r\n}\r\n\r\nGrid.propTypes = {\r\n    keyField: PropTypes.string.isRequired,\r\n    config: PropTypes.any.isRequired,\r\n    data: PropTypes.array,\r\n    columns: PropTypes.array.isRequired,\r\n    store: PropTypes.any\r\n};\r\n\r\nGrid.defaultProps = {\r\n    config: {\r\n        xtype: \"grid\",\r\n    },\r\n    columns: [],\r\n    data: null\r\n}\r\n\r\n\r\n"],"file":"Grid.js"}